/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Index */
        get: operations["index__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/fullText": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Full Text
         * @description Retrieve the full text of a document page on Gallica.
         */
        get: operations["full_text_api_fullText_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/top": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Top */
        get: operations["top_api_top_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Image Snippet */
        get: operations["image_snippet_api_image_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pagination": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Pagination */
        get: operations["pagination_api_pagination_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/mostTermsAtTime": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Most Terms At Time */
        get: operations["most_terms_at_time_api_mostTermsAtTime_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sample": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Sample */
        get: operations["sample_sample_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/occurrences_no_context": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Fetch Occurrences No Context */
        get: operations["fetch_occurrences_no_context_api_occurrences_no_context_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/context": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Context */
        get: operations["context_api_context_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/gallicaRecords": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Fetch Records From Gallica */
        get: operations["fetch_records_from_gallica_api_gallicaRecords_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/series": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get */
        get: operations["get_api_series_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ContextRow */
        ContextRow: {
            /** Pivot */
            pivot: string;
            /** Left Context */
            left_context: string;
            /** Right Context */
            right_context: string;
            /** Page Url */
            page_url?: string;
            /** Page Num */
            page_num?: number;
        };
        /** ConvertedXMLPage */
        ConvertedXMLPage: {
            /** Page Num */
            page_num: number;
            /** Ark */
            ark: string;
            /** Text */
            text: string;
            /** Grams Within */
            grams_within?: string[];
        };
        /** GallicaRowContext */
        GallicaRowContext: {
            /** Paper Title */
            paper_title: string;
            /** Paper Code */
            paper_code: string;
            /** Ark */
            ark: string;
            /** Terms */
            terms: string[];
            /** Date */
            date: string;
            /** Url */
            url: string;
            /** Author */
            author: string;
            /** Context */
            context: components["schemas"]["ContextRow"][];
            /** Ocr Quality */
            ocr_quality: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ImageResponse */
        ImageResponse: {
            /** Image */
            image: string;
            /** Ark */
            ark: string;
            /** Page */
            page: number;
            /** Term */
            term: string;
        };
        /** PaginationData */
        PaginationData: {
            /** Ark */
            ark: string;
            /** Page Count */
            page_count: number;
            /** Has Toc */
            has_toc: boolean;
            /** Toc Location */
            toc_location: number;
            /** Has Content */
            has_content: boolean;
            /** Nb Vue Images */
            nb_vue_images: number;
            /** First Displayed Page */
            first_displayed_page: number;
        };
        /** Paper */
        Paper: {
            /** Code */
            code: string;
            /** Title */
            title: string;
            /** Publisher */
            publisher?: string;
        };
        /** RowRecordResponse */
        RowRecordResponse: {
            /** Records */
            records: components["schemas"]["GallicaRowContext"][];
            /** Num Results */
            num_results: number;
            /** Origin Urls */
            origin_urls: string[];
        };
        /** SRUResponse */
        SRUResponse: {
            /** Records */
            records: components["schemas"]["VolumeRecord"][];
            /** Total Records */
            total_records: number;
            /** Origin Urls */
            origin_urls: string[];
        };
        /** Series */
        Series: {
            /** Data */
            data: [
                number,
                number
            ][];
            /** Name */
            name: string;
        };
        /** TopCity */
        TopCity: {
            /** Count */
            count: number;
            /** City */
            city: string;
        };
        /** TopPaper */
        TopPaper: {
            /** Count */
            count: number;
            paper: components["schemas"]["Paper"];
        };
        /** TopResponse */
        TopResponse: {
            /** Top Papers */
            top_papers: components["schemas"]["TopPaper"][];
            /** Top Cities */
            top_cities: components["schemas"]["TopCity"][];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VolumeRecord */
        VolumeRecord: {
            /** Paper Title */
            paper_title: string;
            /** Paper Code */
            paper_code: string;
            /** Ocr Quality */
            ocr_quality: number;
            /** Author */
            author: string;
            /** Url */
            url: string;
            /** Date */
            date: string;
            /** Ark */
            ark: string;
            /** Terms */
            terms: string[];
            /** Publisher */
            publisher?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    index__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    full_text_api_fullText_get: {
        parameters: {
            query: {
                ark: string;
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConvertedXMLPage"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    top_api_top_get: {
        parameters: {
            query: {
                term: string[];
                limit?: number;
                year?: number;
                month?: number;
                end_year?: number;
                end_month?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TopResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    image_snippet_api_image_get: {
        parameters: {
            query: {
                ark: string;
                term: string;
                page: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ImageResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pagination_api_pagination_get: {
        parameters: {
            query: {
                ark: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginationData"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    most_terms_at_time_api_mostTermsAtTime_get: {
        parameters: {
            query: {
                term: string;
                year: number;
                month?: number;
                max_n?: number;
                sample_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": [
                        string,
                        number
                    ][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    sample_sample_get: {
        parameters: {
            query: {
                term: string;
                start_date?: string;
                end_date?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    fetch_occurrences_no_context_api_occurrences_no_context_get: {
        parameters: {
            query: {
                terms: string[];
                codes?: string[];
                cursor?: number;
                limit?: number;
                link_term?: string;
                link_distance?: number;
                source?: "book" | "periodical" | "all";
                sort?: "date" | "relevance";
                year?: number;
                month?: number;
                end_year?: number;
                end_month?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SRUResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    context_api_context_get: {
        parameters: {
            query: {
                ark: string;
                terms: string[];
                url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContextRow"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    fetch_records_from_gallica_api_gallicaRecords_get: {
        parameters: {
            query: {
                all_context?: boolean;
                terms: string[];
                codes?: string[];
                cursor?: number;
                limit?: number;
                link_term?: string;
                link_distance?: number;
                source?: "book" | "periodical" | "all";
                sort?: "date" | "relevance";
                year?: number;
                month?: number;
                end_year?: number;
                end_month?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RowRecordResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_api_series_get: {
        parameters: {
            query: {
                term: string;
                start_date?: number;
                end_date?: number;
                grouping?: "mois" | "annee";
                source?: "livres" | "presse" | "lemonde";
                link_term?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Series"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
